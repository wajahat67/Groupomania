{"remainingRequest":"/Users/wajahat98/Desktop/projet_7/frontend/node_modules/babel-loader/lib/index.js!/Users/wajahat98/Desktop/projet_7/frontend/node_modules/eslint-loader/index.js??ref--14-0!/Users/wajahat98/Desktop/projet_7/frontend/src/services/posts.js","dependencies":[{"path":"/Users/wajahat98/Desktop/projet_7/frontend/src/services/posts.js","mtime":1643919861000},{"path":"/Users/wajahat98/Desktop/projet_7/frontend/babel.config.js","mtime":1643919861000},{"path":"/Users/wajahat98/Desktop/projet_7/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1646241805660},{"path":"/Users/wajahat98/Desktop/projet_7/frontend/node_modules/babel-loader/lib/index.js","mtime":1646241806090},{"path":"/Users/wajahat98/Desktop/projet_7/frontend/node_modules/eslint-loader/index.js","mtime":1646241805737}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gRMOpY2xhcmF0aW9uIGRlcyBkaWZmw6lyZW50ZXMgaW5zdGFuY2VzIEF4aW9zIHBvdXIgbGVzIG9ww6lyYXRpb25zIFBvc3RzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KaW1wb3J0IEFQSSBmcm9tICIuL2FwaVNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgY3JlYXRlUG9zdDogZnVuY3Rpb24gY3JlYXRlUG9zdChkYXRhKSB7CiAgICByZXR1cm4gQVBJKCkucG9zdCgicG9zdHMvYWRkIiwgZGF0YSk7CiAgfSwKICBnZXRPbmVQb3N0OiBmdW5jdGlvbiBnZXRPbmVQb3N0KGlkKSB7CiAgICByZXR1cm4gQVBJKCkuZ2V0KCJwb3N0cy8iICsgaWQpOwogIH0sCiAgZ2V0QWxsUG9zdHM6IGZ1bmN0aW9uIGdldEFsbFBvc3RzKCkgewogICAgcmV0dXJuIEFQSSgpLmdldCgicG9zdHMvIik7CiAgfSwKICB1cGRhdGVPbmVQb3N0OiBmdW5jdGlvbiB1cGRhdGVPbmVQb3N0KGlkLCBkYXRhKSB7CiAgICByZXR1cm4gQVBJKCkucHV0KCJwb3N0cy8iICsgaWQsIGRhdGEpOwogIH0sCiAgZGVsZXRlT25lUG9zdDogZnVuY3Rpb24gZGVsZXRlT25lUG9zdChpZCkgewogICAgcmV0dXJuIEFQSSgpLmRlbGV0ZSgicG9zdHMvIiArIGlkKTsKICB9LAogIGFkZExpa2U6IGZ1bmN0aW9uIGFkZExpa2UoaWQpIHsKICAgIHJldHVybiBBUEkoKS5wb3N0KCJwb3N0cy8iICsgaWQgKyAiL2xpa2VzIik7CiAgfSwKICBjcmVhdGVDb21tZW50OiBmdW5jdGlvbiBjcmVhdGVDb21tZW50KGlkLCBkYXRhKSB7CiAgICByZXR1cm4gQVBJKCkucG9zdCgicG9zdHMvIiArIGlkICsgIi9jb21tZW50cyIsIGRhdGEpOwogIH0sCiAgZ2V0Q29tbWVudHM6IGZ1bmN0aW9uIGdldENvbW1lbnRzKGlkKSB7CiAgICByZXR1cm4gQVBJKCkuZ2V0KCJwb3N0cy8iICsgaWQgKyAiL2NvbW1lbnRzIik7CiAgfSwKICBkZWxldGVDb21tZW50OiBmdW5jdGlvbiBkZWxldGVDb21tZW50KGlkKSB7CiAgICByZXR1cm4gQVBJKCkuZGVsZXRlKCJwb3N0cy9jb21tZW50cy8iICsgaWQpOwogIH0KfTs="},{"version":3,"sources":["/Users/wajahat98/Desktop/projet_7/frontend/src/services/posts.js"],"names":["API","createPost","data","post","getOnePost","id","get","getAllPosts","updateOnePost","put","deleteOnePost","delete","addLike","createComment","getComments","deleteComment"],"mappings":"AAAA;AACA,OAAOA,GAAP,MAAgB,cAAhB;AAEA,eAAe;AACbC,EAAAA,UADa,sBACFC,IADE,EACI;AACf,WAAOF,GAAG,GAAGG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD,GAHY;AAKbE,EAAAA,UALa,sBAKFC,EALE,EAKE;AACb,WAAOL,GAAG,GAAGM,GAAN,CAAU,WAAWD,EAArB,CAAP;AACD,GAPY;AASbE,EAAAA,WATa,yBASC;AACZ,WAAOP,GAAG,GAAGM,GAAN,CAAU,QAAV,CAAP;AACD,GAXY;AAabE,EAAAA,aAba,yBAaCH,EAbD,EAaKH,IAbL,EAaW;AACtB,WAAOF,GAAG,GAAGS,GAAN,CAAU,WAAWJ,EAArB,EAAyBH,IAAzB,CAAP;AACD,GAfY;AAiBbQ,EAAAA,aAjBa,yBAiBCL,EAjBD,EAiBK;AAChB,WAAOL,GAAG,GAAGW,MAAN,CAAa,WAAWN,EAAxB,CAAP;AACD,GAnBY;AAqBbO,EAAAA,OArBa,mBAqBLP,EArBK,EAqBD;AACV,WAAOL,GAAG,GAAGG,IAAN,CAAW,WAAWE,EAAX,GAAgB,QAA3B,CAAP;AACD,GAvBY;AAyBbQ,EAAAA,aAzBa,yBAyBCR,EAzBD,EAyBKH,IAzBL,EAyBW;AACtB,WAAOF,GAAG,GAAGG,IAAN,CAAW,WAAWE,EAAX,GAAgB,WAA3B,EAAwCH,IAAxC,CAAP;AACD,GA3BY;AA6BbY,EAAAA,WA7Ba,uBA6BDT,EA7BC,EA6BG;AACd,WAAOL,GAAG,GAAGM,GAAN,CAAU,WAAWD,EAAX,GAAgB,WAA1B,CAAP;AACD,GA/BY;AAiCbU,EAAAA,aAjCa,yBAiCCV,EAjCD,EAiCK;AAChB,WAAOL,GAAG,GAAGW,MAAN,CAAa,oBAAoBN,EAAjC,CAAP;AACD;AAnCY,CAAf","sourcesContent":["// Déclaration des différentes instances Axios pour les opérations Posts ----------------------------------\nimport API from \"./apiService\";\n\nexport default {\n  createPost(data) {\n    return API().post(\"posts/add\", data);\n  },\n\n  getOnePost(id) {\n    return API().get(\"posts/\" + id);\n  },\n\n  getAllPosts() {\n    return API().get(\"posts/\");\n  },\n\n  updateOnePost(id, data) {\n    return API().put(\"posts/\" + id, data);\n  },\n\n  deleteOnePost(id) {\n    return API().delete(\"posts/\" + id);\n  },\n\n  addLike(id) {\n    return API().post(\"posts/\" + id + \"/likes\");\n  },\n\n  createComment(id, data) {\n    return API().post(\"posts/\" + id + \"/comments\", data);\n  },\n\n  getComments(id) {\n    return API().get(\"posts/\" + id + \"/comments\");\n  },\n\n  deleteComment(id) {\n    return API().delete(\"posts/comments/\" + id);\n  },\n};\n"]}]}